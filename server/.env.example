# =================================
# FitTrack Server Environment Variables
# =================================

# Server Configuration
PORT=8001
NODE_ENV=development

# =================================
# Database Configuration
# =================================
# MongoDB connection string
# For local MongoDB: mongodb://localhost:27017/fittrack
# For MongoDB Atlas: mongodb+srv://username:password@cluster.mongodb.net/fittrack
MONGODB_URI=mongodb://localhost:27017/fittrack

# =================================
# JWT Authentication
# =================================
# Generate secure random strings for production
# You can use: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your_super_secure_jwt_secret_key_here_minimum_32_characters
REFRESH_TOKEN_SECRET=your_refresh_token_secret_key_here_minimum_32_characters

# =================================
# Email Configuration
# =================================
# Email service provider (gmail, sendgrid, or leave empty for Ethereal testing)
EMAIL_SERVICE=gmail

# Gmail Configuration (for development/small scale)
# Note: Use App Password, not your regular Gmail password
# 1. Enable 2-Factor Authentication on Gmail
# 2. Generate App Password in Google Account settings
# 3. Use the 16-character App Password below
EMAIL_FROM=your-email@gmail.com
EMAIL_PASSWORD=your-gmail-app-password
FROM_NAME=FitTrack Pro

# SendGrid Configuration (recommended for production)
# SENDGRID_USERNAME=apikey
# SENDGRID_PASSWORD=your-sendgrid-api-key

# Other Email Services
# For AWS SES, Mailgun, Postmark, etc., update the emailService.js accordingly

# =================================
# Client Configuration
# =================================
# Frontend URL for password reset links and CORS
CLIENT_URL=http://localhost:5173

# =================================
# File Upload Configuration
# =================================
# Maximum file size for uploads (in bytes)
MAX_FILE_SIZE=5242880

# Upload directories
UPLOAD_PATH=uploads

# =================================
# Security Configuration
# =================================
# Password reset token expiry (in milliseconds)
# Default: 600000 (10 minutes)
PASSWORD_RESET_EXPIRY=600000

# Rate limiting (requests per minute)
RATE_LIMIT_MAX=100

# =================================
# Development/Debugging
# =================================
# Set to true to enable detailed error logging
DEBUG_MODE=true

# Database seeding (set to true to auto-seed on startup)
AUTO_SEED=false

# =================================
# Production-Only Variables
# =================================
# Uncomment and configure for production deployment

# SSL Configuration
# SSL_KEY_PATH=/path/to/ssl/key.pem
# SSL_CERT_PATH=/path/to/ssl/cert.pem

# Logging Configuration
# LOG_LEVEL=info
# LOG_FILE_PATH=/logs/fittrack.log

# Redis Configuration (for session storage, caching)
# REDIS_URL=redis://localhost:6379

# CDN Configuration (for file uploads)
# CDN_URL=https://your-cdn-domain.com
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_REGION=us-east-1
# AWS_S3_BUCKET=your-s3-bucket-name

# =================================
# Third-Party Integrations
# =================================
# Google Analytics
# GA_TRACKING_ID=UA-XXXXXXXXX-X

# Social Login (OAuth)
# GOOGLE_CLIENT_ID=your-google-oauth-client-id
# GOOGLE_CLIENT_SECRET=your-google-oauth-client-secret
# FACEBOOK_APP_ID=your-facebook-app-id
# FACEBOOK_APP_SECRET=your-facebook-app-secret

# =================================
# Notification Services
# =================================
# Push notification services (Firebase, OneSignal, etc.)
# FIREBASE_SERVER_KEY=your-firebase-server-key
# ONESIGNAL_APP_ID=your-onesignal-app-id
# ONESIGNAL_REST_API_KEY=your-onesignal-api-key

# =================================
# Monitoring & Analytics
# =================================
# Application monitoring (Sentry, LogRocket, etc.)
# SENTRY_DSN=your-sentry-dsn
# LOGROCKET_APP_ID=your-logrocket-app-id

# Health check endpoint secret
# HEALTH_CHECK_SECRET=your-health-check-secret

# =================================
# IMPORTANT NOTES:
# =================================
# 1. Never commit this file with real credentials to version control
# 2. Generate strong, unique secrets for JWT tokens in production
# 3. Use environment-specific values for different deployment stages
# 4. Regularly rotate secrets and API keys
# 5. Use a password manager or secure vault for storing production secrets
# 6. For Gmail: Use App Passwords, not regular passwords
# 7. Consider using environment variable management tools like dotenv-vault
# 8. Validate all environment variables on application startup